/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_PROTOCOL_PROTO_TEST_PB_H_INCLUDED
#define PB_PROTOCOL_PROTO_TEST_PB_H_INCLUDED
#include "./nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _protocol_test {
    int64_t expiration;
    int64_t timestamp;
} protocol_test;

typedef struct _protocol_TransferContract {
    pb_callback_t owner_address; /* Address of the sender */
    pb_callback_t to_address; /* Address of the receiver */
    int64_t amount; /* The amount of currency to transfer */
} protocol_TransferContract;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define protocol_test_init_default               {0, 0}
#define protocol_TransferContract_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define protocol_test_init_zero                  {0, 0}
#define protocol_TransferContract_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define protocol_test_expiration_tag             8
#define protocol_test_timestamp_tag              18
#define protocol_TransferContract_owner_address_tag 1
#define protocol_TransferContract_to_address_tag 2
#define protocol_TransferContract_amount_tag     3

/* Struct field encoding specification for nanopb */
#define protocol_test_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    expiration,        8) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,        18)
#define protocol_test_CALLBACK NULL
#define protocol_test_DEFAULT NULL

#define protocol_TransferContract_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   owner_address,     1) \
X(a, CALLBACK, SINGULAR, STRING,   to_address,        2) \
X(a, STATIC,   SINGULAR, INT64,    amount,            3)
#define protocol_TransferContract_CALLBACK pb_default_field_callback
#define protocol_TransferContract_DEFAULT NULL

extern const pb_msgdesc_t protocol_test_msg;
extern const pb_msgdesc_t protocol_TransferContract_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define protocol_test_fields &protocol_test_msg
#define protocol_TransferContract_fields &protocol_TransferContract_msg

/* Maximum encoded size of messages (where known) */
/* protocol_TransferContract_size depends on runtime parameters */
#define PROTOCOL_PROTO_TEST_PB_H_MAX_SIZE        protocol_test_size
#define protocol_test_size                       23

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
